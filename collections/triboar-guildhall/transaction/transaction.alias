<drac2>
a = argparse(&ARGS&)
ch = character()

# Display help if requested
if not &ARGS& or &ARGS&[0].lower() in ['help', '?']:
    return f'''embed -title "Transaction Alias Help" -color {color} -desc "Record a transaction and update your coin purse!" -f "Usage|`{ctx.prefix}transaction \"description\" -cost1 -cost2 ...`\n\nRecord a transaction with any number of costs or gains. Positive values add currency, negative values subtract.\n\nSupported currencies: `cp`, `sp`, `ep`, `gp`, `pp` (defaults to `gp` if no unit specified)." -f "Examples|`{ctx.prefix}transaction \"4x Potions of Healing\" -50gp -50gp -50gp -50gp`\n`{ctx.prefix}transaction \"Sold old armor\" 25gp`\n`{ctx.prefix}transaction \"Mixed payment\" -10gp -50sp 5cp`" -footer "{ctx.prefix}transaction help | Triboar Guildhall Collection"'''

# Get transaction description
description = a.last('d') or a.last('desc') or (str(&ARGS&[0]) if &ARGS& else "Transaction")

# Parse currency values from remaining arguments
currency_units = ['cp', 'sp', 'ep', 'gp', 'pp']
transactions = {'cp': 0, 'sp': 0, 'ep': 0, 'gp': 0, 'pp': 0}

for arg in &ARGS&[1:]:
    arg_str = str(arg).lower()
    # Check if it has a currency unit
    currency = None
    for unit in currency_units:
        if arg_str.endswith(unit):
            currency = unit
            value_str = arg_str[:-len(unit)]
            break

    # Default to gp if no unit found
    if not currency:
        currency = 'gp'
        value_str = arg_str

    # Parse the numeric value
    try:
        value = int(value_str)
        transactions[currency] += value
    except:
        pass  # Skip invalid values

# Check if any transactions were recorded
if all(v == 0 for v in transactions.values()):
    return f'''embed -title "No Transaction!" -color {color} -desc "No valid currency amounts found. Use format: `-50gp` or `25sp`" -footer "{ctx.prefix}transaction help | Triboar Guildhall Collection"'''

# Load baglib and modify coins
using(baglib='5f1ffcbf-3f59-4396-b402-1ca0f02d6bbb')
loaded_bags = baglib.LoadedBags()

for currency, amount in transactions.items():
    if amount != 0:
        loaded_bags.modify_coins(coin=currency, quantity=amount)

loaded_bags.save_bags()

# Load tool module for display
using(tool_check='6251e20c-7545-4c63-92af-31e0745f2b0c')

# Build embed with transaction details and coin purse
coin_display = ' '.join(loaded_bags.display_coins(compact=False))

# Build transaction summary
transaction_lines = []
for currency in currency_units:
    amount = transactions[currency]
    if amount != 0:
        sign = '+' if amount > 0 else ''
        transaction_lines.append(f"{sign}{amount}{currency}")

transaction_summary = '\n'.join(transaction_lines)

output = f'''embed -title "{name}'s Transaction" -color {color} -thumb {image} -desc "{description}"'''
output += f''' -f "Changes:|{transaction_summary}"'''
output += f''' {coin_display}'''
output += tool_check.embed_tool_fields()
output += f''' -footer "{ctx.prefix}transaction help | Triboar Guildhall Collection"'''

return output

</drac2>
