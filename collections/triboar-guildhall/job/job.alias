<drac2>
a =argparse(&ARGS&)
ch=character()

# grab the first argument and match it to a skill or default to perception.  Use `.replace()` to pull out any spaces and `.lower()` to make everything lowercase in case someone enters "SleighT of Hand".  Skip this line if you are using a specific skill, and enter the skill manually: skill = 'sleightOfHand', or use your own list of skills: ([x for x in ['stealth', 'animalHandling'] if '&1&'.lower().replace(' ','') in x.lower()]+['stealth'])[0]

skill = ([x for x,y in ch.skills if '&1&'.lower().replace(' ','') in x.lower()]+['perception'])[0]

# construct our skill roll, adding prof or exp automatically via .d20(), rerolling 1s for Halfling Luck, applying Reliable Talent if prof, along with parsing for adv/dis and bonuses from our args.

# grab the reroll number if the character has the csetting reroll or default to None
reroll_number = ch.csettings.get("reroll", None)

# grab a minimum from our args like a standard !check, (-mc #) or set it to 10 if the character has the csetting 'talent' set to True and has proficiency or expertise in the chosen skill.
minimum_check = a.last('mc', None, int) or (10 if ch.csettings.get("talent", False) and ch.skills[skill].prof>=1 else None)

# put all those arguments in the proper places in our d20() function, inside a vroll().
r = vroll(ch.skills[skill].d20(None, reroll_number, minimum_check))

## calculate gold earned
g = vroll(d4, r,)

# return our roll, replacing the camelCase skill names with plain text.
return f"Your {skill.replace('H', ' h').replace('O', ' o')} roll:\n{r}"
return f"Your earnings:\n{g}gp"
</drac2>